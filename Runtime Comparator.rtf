{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import random\
import time\
\
\
MList = []\
\
for i in range (10000):\
  MList.append(i+1)\
\
TList = []\
\
for i in range (1000):\
  TList.append(random.randint(1,10000))\
\
Ltime = 0\
Btime = 0\
\
def LineSearch(answer, num):\
  x = False\
  for i in range (len(answer)):\
    if answer[i] == num:\
     x = True\
  return(x)\
\
\
def BinarySearch(target, lst):\
  lo = 0\
  hi = len(lst)\
  while True:\
    mid = (hi+lo)//2\
    if lst[mid] == target:\
      return True\
      break\
    if lst[mid] < target:\
      lo = mid + 1\
    elif lst[mid] > target:\
      hi = mid\
    if lo >= hi:\
      return False\
      break\
\
a = time.time()\
for i in range(len(TList)):\
  LineSearch(MList, TList[i])\
b = time.time()\
\
Ltime = b - a\
\
a = time.time()\
for i in range(len(TList)):\
  BinarySearch(TList[i], MList)\
b = time.time()\
\
Btime = b - a\
\
\
print(f'It took \{Ltime\} seconds for the Linear search engine to find the values. It took \{Btime\} seconds for the Binary search engine to fnd the values.')\
\
\
\
\
\
\
\
\
\
\
\
\
}